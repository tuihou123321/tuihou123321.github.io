{"version":3,"sources":["../../../src/store/index.js"],"names":["use","store","Store","state","a","playerBarJson","currentArrIndex","widthProgress","currentTime","playing","currentProgressArr","songName","singerName","songImg","songSrc","barLists","getters","mutations","timeupdate","addMusic","payload","isExistFun","item","isExist","len","length","i","id","push","commit","startIcon","playMusic","name","ar","playMusicAll","forEach","value","index","value2","index2","splice","concat","removeList","clearAll","next","toggleStatus","actions"],"mappings":"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","file":"index.js","sourcesContent":["/**\r\n * Created by Administrator on 2018/1/22.\r\n */\r\nimport Vue from \"vue\"\r\nimport Vuex from \"vuex\"\r\nVue.use(Vuex)\r\n\r\nvar store=new Vuex.Store({\r\n    state:{\r\n        a:1,\r\n        playerBarJson:{\r\n            currentArrIndex:0, //当前播放的索引\r\n            widthProgress:\"10%\",  //当前播放的进度条\r\n            currentTime:0,   //当前播放的时间\r\n            playing:false,\r\n            currentProgressArr: {\r\n                songName: \"\",\r\n                singerName: \"\",\r\n                songImg: \"\",\r\n                songSrc: \"\"\r\n            },\r\n            barLists:[]  //选中的播放列表\r\n        }\r\n    },\r\n    getters:{\r\n    },\r\n    //同步方法\r\n    mutations:{\r\n        timeupdate:function(state,currentTime){\r\n            state.playerBarJson.currentTime=currentTime;\r\n        },\r\n        widthProgress:function(state,widthProgress){\r\n            state.playerBarJson.widthProgress=widthProgress;\r\n        },\r\n        //从列表页点击 添加歌曲到播放列表\r\n        addMusic:function(state,payload){\r\n            function isExistFun(item){\r\n                var isExist=false; //默认歌曲不重复\r\n                var len=state.playerBarJson.barLists.length;\r\n                for (var i=0;i<len;i++) {\r\n                    if (state.playerBarJson.barLists[i].id == item.id) {\r\n                        //重复，不添加到歌曲库\r\n                        state.playerBarJson.currentArrIndex = i;\r\n                        isExist=true;\r\n                    }\r\n                }\r\n                return isExist;\r\n            }\r\n            //没有重复,直接添加到最后，索引也跳转\r\n            if(!isExistFun(payload)){\r\n                state.playerBarJson.barLists.push(payload);\r\n                state.playerBarJson.currentArrIndex = state.playerBarJson.barLists.length>0?state.playerBarJson.barLists.length-1:0;\r\n            }\r\n            //重复了，不添加，索引跳转到当前选中的部分，已在函数中处理\r\n            //...\r\n            //重新开始播放新音乐\r\n             this.commit(\"playMusic\",payload);\r\n        },\r\n        startIcon(state){\r\n            state.playerBarJson.playing=true;\r\n        },\r\n        playMusic(state,payload){\r\n            state.playerBarJson.currentProgressArr.songName=payload.name;\r\n            state.playerBarJson.currentProgressArr.singerName=payload.ar[0].name;\r\n            state.playerBarJson.currentProgressArr.songImg=\"../static/banner1.jpg\";\r\n            state.a++;\r\n            if(state.a%2==1){\r\n                state.playerBarJson.currentProgressArr.songSrc=\"../static/music/music1.mp3\";\r\n            }\r\n            else{\r\n                state.playerBarJson.currentProgressArr.songSrc=\"../static/music/music2.mp3\";\r\n            }\r\n            state.playerBarJson.playing=true;\r\n        },\r\n        //添加所有歌曲到列表\r\n        playMusicAll:function(state,payload){\r\n            //先删除相同的数组\r\n            state.playerBarJson.barLists.forEach(function(value,index){\r\n                payload.forEach(function(value2,index2){\r\n                    if(value==value2){\r\n                        payload.splice(index2,1);\r\n                    }\r\n                })\r\n            })\r\n            //把最后处理过的数组合拼进去；\r\n            state.playerBarJson.barLists=state.playerBarJson.barLists.concat(payload);\r\n        },\r\n        //从列表中删除歌曲\r\n        removeList:function(state,payload){\r\n            state.playerBarJson.barLists.splice(payload.index,1);\r\n        },\r\n        //清空歌曲库\r\n        clearAll:function(state){\r\n            state.playerBarJson.barLists=[];\r\n            state.playerBarJson.currentProgressArr={};\r\n            state.playerBarJson.playing=false;\r\n        },\r\n        next:function(state){\r\n            if(state.playerBarJson.currentArrIndex<state.playerBarJson.barLists.length-1){\r\n                ++state.playerBarJson.currentArrIndex;\r\n            }else{\r\n                state.playerBarJson.currentArrIndex=0;\r\n            }\r\n            this.commit(\"playMusic\",state.playerBarJson.barLists[state.playerBarJson.currentArrIndex]);\r\n        },\r\n        toggleStatus:function(state){\r\n            state.playerBarJson.playing=!state.playerBarJson.playing;\r\n        }\r\n    },\r\n    actions:{\r\n    }\r\n})\r\n\r\nexport default  store;"]}